#!/usr/bin/env node

/* jslint node: true, esnext: true */

'use strict';

const api = require('./api'),
  fs = require('fs');

api.open().then(connection =>
  connection.upload(fs.readFileSync('../de.mfelten.infrastructure/assets.sym'))
  .then(result => {
    return connection.upload('networkInterface').then(result => {
      connection.query(false, api.queryMask.VMV, 0, result.symbols[0], 0).then(ipas => {
        const owners = [];
        const interfaces = [];
        for (let i = 0; i < ipas.length; i += 2) {
          owners.push(ipas[i]);
          interfaces.push(connection.decodeSymbol(ipas[i + 1]));
        }

        Promise.all(interfaces).then(all => {
          console.log(`interfaces: ${all.map(o => JSON.stringify(o))}`);
        });
      });
    });

    //Promise.all(result.symbols.map(s => connection.decodeSymbol(s))).then(symbols => console.log(symbols));
  })
  .catch(result => console.error(result)));
