#!/usr/bin/env node

/* jslint node: true, esnext: true */

'use strict';

const api = require('./api'),
  fs = require('fs');

api.open().then(connection =>
  connection.upload(fs.readFileSync('../de.mfelten.infrastructure/assets.sym'))
  .then(result => {
    return connection.upload('networkInterface').then(result => {
      connection.query(false, api.queryMask.VMV, 0, result[0], 0).then(ipas => {
        //console.log(ipas);
        Promise.all(ipas.map(symbol => connection.decodeSymbol(symbol))).then(
          decoded => {
            for (let i = 0; i < decoded.length; i += 2) {
              const a = decoded[i + 0];
              const b = decoded[i + 1];
              delete a.BlobType;
              delete b.BlobType;

              console.log(`${JSON.stringify(a)} <> ${JSON.stringify(b)}`);
            }
          }
        );
      });
    });
  })
  .catch(result => console.error(result)));
